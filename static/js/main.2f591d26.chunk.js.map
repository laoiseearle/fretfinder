{"version":3,"sources":["components/Header.js","components/Fret.js","components/String.js","components/Fretboard.js","App.js","index.js"],"names":["Header","openMenu","setOpenMenu","changeTuningFromPreset","setMenuSettings","menuSettings","useState","instrument","setInstrument","accidentals","hideAccidentals","landscape","rightHanded","fretNums","dropdownMenuOpen","setDropdownMenuOpen","instrumentPreset","tuning","toggleDropDownMenus","target","updatedState","Object","keys","reduce","acc","curr","className","flattenPitch","onClick","useFlats","data","map","preset","presetName","presetTuning","type","Fret","note","index","updateTuning","notesArray","string","focusedNote","highlightNotes","noteIndex","indexOf","clickNote","length","Array","from","includes","displayFretNum","style","backgroundColor","noteColor","display","String","openNoteIndex","openNote","notesArrayFlat","notesArraySharp","val","key","Fretboard","setTuning","setFocusedNote","newNote","newTuning","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.2f591d26.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport './Header.css';\nimport data from '../presets.json';\n\nfunction Header({\n  openMenu,\n  setOpenMenu,\n  changeTuningFromPreset,\n  setMenuSettings,\n  menuSettings,\n}) {\n  const [instrument, setInstrument] = useState('guitar');\n\n  const [dropdownMenuOpen, setDropdownMenuOpen] = useState({\n    accidentals: false,\n    hideAccidentals: false,\n    landscape: false,\n    rightHanded: false,\n    fretNums: false,\n    instrument: false,\n  });\n\n  const instrumentPreset = (tuning, instrument) => {\n    setInstrument(instrument);\n    changeTuningFromPreset(tuning);\n  };\n\n  const toggleDropDownMenus = target => {\n    if (dropdownMenuOpen[target]) {\n      return setDropdownMenuOpen(!dropdownMenuOpen[target]);\n    }\n\n    const updatedState = Object.keys(dropdownMenuOpen).reduce(\n      (acc, curr) => ({ ...acc, [curr]: false }),\n      {}\n    );\n    updatedState[target] = !dropdownMenuOpen[target];\n    return setDropdownMenuOpen(updatedState);\n  };\n\n  return (\n    <header>\n      <h1>FretFinder</h1>\n\n      <div className=\"flex-right\">\n        <div className=\"pitch-direction\">\n          <i\n            className={`fa ${\n              menuSettings.flattenPitch\n                ? 'fa-arrow-circle-down'\n                : 'fa-arrow-circle-up'\n            }`}\n            onClick={() =>\n              setMenuSettings({\n                ...menuSettings,\n                flattenPitch: !menuSettings.flattenPitch,\n              })\n            }\n          ></i>\n        </div>\n\n        <div className=\"menu\">\n          <i\n            className={`fa ${openMenu ? 'fa-times' : 'fa-cog'}`}\n            onClick={() => setOpenMenu(!openMenu)}\n          ></i>\n        </div>\n      </div>\n\n      <div className={openMenu ? 'settings-menu menu-open' : 'settings-menu'}>\n        <h2>Settings</h2>\n        <div className=\"menu-item\">\n          <div className=\"dropdown\">\n            <button\n              onClick={() => {\n                toggleDropDownMenus('landscape');\n              }}\n            >\n              <p>Display Mode</p>\n              <p>{`${menuSettings.landscape ? 'Landscape' : 'Portrait'}`}</p>\n            </button>\n            <div\n              className={\n                dropdownMenuOpen.landscape\n                  ? 'dropdown-menu active'\n                  : 'dropdown-menu'\n              }\n            >\n              <button\n                onClick={() => {\n                  setMenuSettings({ ...menuSettings, landscape: true });\n                  toggleDropDownMenus('landscape');\n                }}\n              >\n                <p>Landscape</p>\n              </button>\n              <button\n                onClick={() => {\n                  setMenuSettings({ ...menuSettings, landscape: false });\n                  toggleDropDownMenus('landscape');\n                }}\n              >\n                <p>Portrait</p>\n              </button>\n            </div>\n          </div>\n        </div>\n\n        <div className=\"menu-item\">\n          <div className=\"dropdown\">\n            <button\n              onClick={() => {\n                toggleDropDownMenus('accidentals');\n              }}\n            >\n              <p>Accidental Type</p>\n              <p>{`${menuSettings.useFlats ? 'Flats' : 'Sharps'}`}</p>\n            </button>\n            <div\n              className={\n                dropdownMenuOpen.accidentals\n                  ? 'dropdown-menu active'\n                  : 'dropdown-menu'\n              }\n            >\n              <button\n                onClick={() => {\n                  setMenuSettings({ ...menuSettings, useFlats: true });\n                  toggleDropDownMenus('accidentals');\n                }}\n              >\n                <p>Flats</p>\n              </button>\n              <button\n                onClick={() => {\n                  setMenuSettings({ ...menuSettings, useFlats: false });\n                  toggleDropDownMenus('accidentals');\n                }}\n              >\n                <p>Sharps</p>\n              </button>\n            </div>\n          </div>\n        </div>\n\n        <div className=\"menu-item\">\n          <div className=\"dropdown\">\n            <button\n              onClick={() => {\n                toggleDropDownMenus('hideAccidentals');\n              }}\n            >\n              <p>Accidental Display</p>\n              <p>{`${menuSettings.hideAccidentals ? 'Hidden' : 'Visible'}`}</p>\n            </button>\n            <div\n              className={\n                dropdownMenuOpen.hideAccidentals\n                  ? 'dropdown-menu active'\n                  : 'dropdown-menu'\n              }\n            >\n              <button\n                onClick={() => {\n                  setMenuSettings({ ...menuSettings, hideAccidentals: true });\n                  toggleDropDownMenus('hideAccidentals');\n                }}\n              >\n                <p>Hidden</p>\n              </button>\n              <button\n                onClick={() => {\n                  setMenuSettings({\n                    ...menuSettings,\n                    hideAccidentals: false,\n                  });\n                  toggleDropDownMenus('hideAccidentals');\n                }}\n              >\n                <p>Visible</p>\n              </button>\n            </div>\n          </div>\n        </div>\n\n        <div className=\"menu-item\">\n          <div className=\"dropdown\">\n            <button\n              onClick={() => {\n                toggleDropDownMenus('rightHanded');\n              }}\n            >\n              <p>Fretboard</p>\n              <p>{`${\n                menuSettings.rightHanded ? 'Right-Handed' : 'Left-Handed'\n              }`}</p>\n            </button>\n            <div\n              className={\n                dropdownMenuOpen.rightHanded\n                  ? 'dropdown-menu active'\n                  : 'dropdown-menu'\n              }\n            >\n              <button\n                onClick={() => {\n                  setMenuSettings({ ...menuSettings, rightHanded: true });\n                  toggleDropDownMenus('rightHanded');\n                }}\n              >\n                <p>Right-Handed</p>\n              </button>\n              <button\n                onClick={() => {\n                  setMenuSettings({\n                    ...menuSettings,\n                    rightHanded: false,\n                  });\n                  toggleDropDownMenus('rightHanded');\n                }}\n              >\n                <p>Left-Handed</p>\n              </button>\n            </div>\n          </div>\n        </div>\n\n        <div className=\"menu-item\">\n          <div className=\"dropdown\">\n            <button\n              onClick={() => {\n                toggleDropDownMenus('fretNums');\n              }}\n            >\n              <p>Fret Numbers</p>\n              <p>{`${menuSettings.fretNums}`}</p>\n            </button>\n            <div\n              className={\n                dropdownMenuOpen.fretNums\n                  ? 'dropdown-menu active'\n                  : 'dropdown-menu'\n              }\n            >\n              <button\n                onClick={() => {\n                  setMenuSettings({ ...menuSettings, fretNums: 'all' });\n                  toggleDropDownMenus('fretNums');\n                }}\n              >\n                <p>All</p>\n              </button>\n              <button\n                onClick={() => {\n                  setMenuSettings({\n                    ...menuSettings,\n                    fretNums: 'inlays',\n                  });\n                  toggleDropDownMenus('fretNums');\n                }}\n              >\n                <p>Inlays</p>\n              </button>\n\n              <button\n                onClick={() => {\n                  setMenuSettings({\n                    ...menuSettings,\n                    fretNums: 'off',\n                  });\n                  toggleDropDownMenus('fretNums');\n                }}\n              >\n                <p>Off</p>\n              </button>\n            </div>\n          </div>\n        </div>\n\n        <div className=\"menu-item instrument\">\n          <h3>Presets</h3>\n          <div className=\"dropdown\">\n            <button\n              onClick={() => {\n                toggleDropDownMenus('instrument');\n              }}\n            >\n              <p>Instrument</p>\n              <p>{`${instrument}`}</p>\n            </button>\n            <div\n              className={\n                dropdownMenuOpen.instrument\n                  ? 'dropdown-menu active'\n                  : 'dropdown-menu'\n              }\n            >\n              <button\n                onClick={() => {\n                  instrumentPreset(['E', 'A', 'D', 'G', 'B', 'E'], 'guitar');\n                  toggleDropDownMenus('instrument');\n                }}\n              >\n                <p>Guitar</p>\n              </button>\n              <button\n                onClick={() => {\n                  instrumentPreset(['E', 'A', 'D', 'G'], 'bass');\n                  toggleDropDownMenus('instrument');\n                }}\n              >\n                <p>Bass</p>\n              </button>\n\n              <button\n                onClick={() => {\n                  instrumentPreset(['G', 'C', 'E', 'A'], 'ukulele');\n                  toggleDropDownMenus('instrument');\n                }}\n              >\n                <p>Ukulele</p>\n              </button>\n\n              <button\n                onClick={() => {\n                  instrumentPreset(['G', 'D', 'A', 'E'], 'mandolin');\n                  toggleDropDownMenus('instrument');\n                }}\n              >\n                <p>Mandolin</p>\n              </button>\n            </div>\n          </div>\n        </div>\n\n        <div className=\"menu-item\">\n          <div className=\"tuning-presets\">\n            {data[instrument].map(preset => {\n              const presetName = preset[0];\n              const presetTuning = preset[1];\n\n              return (\n                <button\n                  type=\"button\"\n                  onClick={() => changeTuningFromPreset(presetTuning)}\n                >\n                  {presetName}\n                </button>\n              );\n            })}\n          </div>\n        </div>\n      </div>\n    </header>\n  );\n}\n\nexport default Header;\n","import React from 'react';\nimport './Fret.css';\n\nconst Fret = ({\n  note,\n  index,\n  updateTuning,\n  notesArray,\n  string,\n  focusedNote,\n  highlightNotes,\n  menuSettings,\n}) => {\n  const noteIndex = notesArray.indexOf(note);\n\n  const flattenNote = () => {\n    noteIndex === 0\n      ? updateTuning(string, notesArray[notesArray.length - 1])\n      : updateTuning(string, notesArray[noteIndex - 1]);\n  };\n\n  const sharpenNote = () => {\n    updateTuning(string, notesArray[(noteIndex + 1) % notesArray.length]);\n  };\n\n  const clickNote = () => {\n    if (index === 0) {\n      menuSettings.flattenPitch ? flattenNote() : sharpenNote();\n    } else {\n      highlightNotes(noteIndex);\n    }\n  };\n\n  const noteColor = () => {\n    switch (note) {\n      case 'C': {\n        return '#fd2424';\n      }\n      case 'D': {\n        return '#24fd48';\n      }\n      case 'E': {\n        return '#fd3fd4';\n      }\n      case 'F': {\n        return '#fde03f';\n      }\n      case 'G': {\n        return '#174fe9';\n      }\n      case 'A': {\n        return '#f58849';\n      }\n      case 'B': {\n        return '#09cbe0';\n      }\n      default: {\n        return 'white';\n      }\n    }\n  };\n\n  const noteDisplay = () => {\n    // Always display open notes\n    if (index === 0) {\n      return 'flex';\n    }\n\n    if (menuSettings.hideAccidentals && note.length >= 2) {\n      // Don't hide focused accidental after changing settings\n      if (focusedNote === noteIndex) {\n        return 'flex';\n      } else {\n        return 'none';\n      }\n    }\n\n    if (focusedNote === noteIndex || focusedNote === -1) {\n      return 'flex';\n    } else {\n      return 'none';\n    }\n  };\n\n  const displayFretNum = () => {\n    if (string !== 0 || index === 0) {\n      return;\n    } else if (\n      menuSettings.fretNums === 'off' ||\n      (menuSettings.fretNums === 'inlays' &&\n        !Array.from([3, 5, 7, 9, 12]).includes(index))\n    ) {\n      return;\n    }\n    return <div className=\"fret-num\">{index}</div>;\n  };\n\n  return (\n    <div\n      className={menuSettings.rightHanded ? 'fret' : 'fret fret-left-handed'}\n    >\n      {displayFretNum()}\n      <div\n        className=\"note\"\n        style={{\n          backgroundColor: noteColor(),\n          display: noteDisplay(),\n        }}\n        onClick={() => clickNote()}\n      >\n        {note}\n      </div>\n    </div>\n  );\n};\n\nexport default Fret;\n","import React from 'react';\nimport Fret from './Fret';\nimport './String.css';\n\nconst String = ({\n  openNote,\n  updateTuning,\n  string,\n  focusedNote,\n  highlightNotes,\n  menuSettings,\n}) => {\n  const fretNums = 12;\n  const notesArrayFlat = [\n    'C',\n    'Db',\n    'D',\n    'Eb',\n    'E',\n    'F',\n    'Gb',\n    'G',\n    'Ab',\n    'A',\n    'Bb',\n    'B',\n  ];\n  const notesArraySharp = [\n    'C',\n    'C#',\n    'D',\n    'D#',\n    'E',\n    'F',\n    'F#',\n    'G',\n    'G#',\n    'A',\n    'A#',\n    'B',\n  ];\n  const notesArray = menuSettings.useFlats ? notesArrayFlat : notesArraySharp;\n  let note = openNote;\n  let openNoteIndex;\n\n  return (\n    <div\n      className={\n        menuSettings.rightHanded ? 'string' : 'string string-left-handed'\n      }\n    >\n      {[...Array(fretNums + 1)].map((val, index) => {\n        // Open Note\n        if (index === 0) {\n          // Find position of note when switching between accidental types\n          note.includes('#')\n            ? (openNoteIndex = notesArraySharp.indexOf(note))\n            : (openNoteIndex = notesArrayFlat.indexOf(note));\n\n          note = notesArray[openNoteIndex];\n        } else {\n          const noteIndex = notesArray.indexOf(note);\n          note = notesArray[(noteIndex + 1) % notesArray.length];\n        }\n\n        return (\n          <Fret\n            note={note}\n            index={index}\n            key={index}\n            string={string}\n            updateTuning={updateTuning}\n            notesArray={notesArray}\n            focusedNote={focusedNote}\n            highlightNotes={highlightNotes}\n            menuSettings={menuSettings}\n          />\n        );\n      })}\n    </div>\n  );\n};\n\nexport default String;\n","import React, { useState } from 'react';\nimport String from './String';\nimport './Fretboard.css';\n\nconst Fretboard = ({ tuning, setTuning, menuSettings }) => {\n  const [focusedNote, setFocusedNote] = useState(-1);\n\n  const updateTuning = (string, newNote) => {\n    const newTuning = [...tuning];\n    newTuning[string] = newNote;\n    setTuning(newTuning);\n  };\n\n  const highlightNotes = note => {\n    setFocusedNote(note);\n\n    // Reset highlight after clicking twice\n    if (note === focusedNote) {\n      setFocusedNote(-1);\n    }\n  };\n  return (\n    <section\n      className={\n        menuSettings.rightHanded ? 'fretboard' : 'fretboard left-handed'\n      }\n    >\n      {tuning.map((val, index) => (\n        <String\n          openNote={val}\n          key={index}\n          string={index}\n          updateTuning={updateTuning}\n          focusedNote={focusedNote}\n          highlightNotes={highlightNotes}\n          menuSettings={menuSettings}\n        />\n      ))}\n    </section>\n  );\n};\n\nexport default Fretboard;\n","import React, { useState } from 'react';\nimport Header from './components/Header';\nimport Fretboard from './components/Fretboard';\nimport 'font-awesome/css/font-awesome.min.css';\nimport './App.css';\n\nconst App = () => {\n  const initialTuning = ['E', 'A', 'D', 'G', 'B', 'E'];\n  const [openMenu, setOpenMenu] = useState(false);\n  const [tuning, setTuning] = useState(initialTuning);\n\n  const [menuSettings, setMenuSettings] = useState({\n    useFlats: true,\n    rightHanded: true,\n    hideAccidentals: true,\n    flattenPitch: true,\n    fretNums: 'inlays',\n    landscape: false,\n  });\n\n  const changeTuningFromPreset = preset => {\n    setTuning(preset);\n  };\n\n  return (\n    <div className={menuSettings.landscape ? 'App landscape' : 'App'}>\n      <Header\n        openMenu={openMenu}\n        setOpenMenu={setOpenMenu}\n        changeTuningFromPreset={changeTuningFromPreset}\n        setMenuSettings={setMenuSettings}\n        menuSettings={menuSettings}\n      />\n      <main>\n        <Fretboard\n          tuning={tuning}\n          setTuning={setTuning}\n          menuSettings={menuSettings}\n        />\n      </main>\n    </div>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}