{"version":3,"sources":["components/Header.js","components/Fret.js","components/String.js","components/Fretboard.js","App.js","index.js"],"names":["Header","openMenu","setOpenMenu","changeTuningFromPreset","setMenuSettings","menuSettings","useState","instrument","setInstrument","instrumentPreset","tuning","className","flattenPitch","onClick","style","display","e","stopPropagation","type","name","id","onChange","useFlats","defaultChecked","htmlFor","hideAccidentals","rightHanded","fretNums","data","map","preset","presetName","presetTuning","Fret","note","index","updateTuning","notesArray","string","focusedNote","highlightNotes","noteIndex","indexOf","clickNote","length","Array","from","includes","displayFretNum","backgroundColor","noteColor","String","openNoteIndex","openNote","notesArrayFlat","notesArraySharp","val","key","Fretboard","setTuning","setFocusedNote","newNote","newTuning","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f29693d7.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport './Header.css';\nimport data from '../presets.json';\n\nfunction Header({\n  openMenu,\n  setOpenMenu,\n  changeTuningFromPreset,\n  setMenuSettings,\n  menuSettings,\n}) {\n  const [instrument, setInstrument] = useState('guitar');\n\n  const instrumentPreset = (tuning, instrument) => {\n    setInstrument(instrument);\n    changeTuningFromPreset(tuning);\n  };\n\n  const test = tuning => {\n    changeTuningFromPreset(tuning);\n  };\n\n  return (\n    <header>\n      <h1 className=\"header-title\">FretFinder</h1>\n\n      <div className=\"pitch-direction\">\n        <i\n          className={`fa ${\n            menuSettings.flattenPitch\n              ? 'fa-arrow-circle-down'\n              : 'fa-arrow-circle-up'\n          }`}\n          onClick={() =>\n            setMenuSettings({\n              ...menuSettings,\n              flattenPitch: !menuSettings.flattenPitch,\n            })\n          }\n        ></i>\n      </div>\n\n      <div className=\"settings\">\n        <i\n          className={`fa ${openMenu ? 'fa-times' : 'fa-cog'}`}\n          onClick={() => setOpenMenu(!openMenu)}\n        ></i>\n        <div\n          className=\"settings-menu\"\n          onClick={() => setOpenMenu(false)}\n          style={{ display: openMenu ? 'flex' : 'none' }}\n        >\n          <div\n            className=\"menu-container\"\n            onClick={e => {\n              e.stopPropagation();\n            }}\n          >\n            <h2>Fretboard</h2>\n\n            <div className=\"menu-item\">\n              <p>Accidental Type</p>\n              <div className=\"radio-button\">\n                <input\n                  type=\"radio\"\n                  name=\"accidental\"\n                  id=\"flat\"\n                  onChange={() =>\n                    setMenuSettings({ ...menuSettings, useFlats: true })\n                  }\n                  defaultChecked\n                />\n                <label htmlFor=\"flat\">Flat</label>\n\n                <input\n                  type=\"radio\"\n                  name=\"accidental\"\n                  id=\"sharp\"\n                  onChange={() =>\n                    setMenuSettings({ ...menuSettings, useFlats: false })\n                  }\n                />\n                <label htmlFor=\"sharp\">Sharp</label>\n              </div>\n            </div>\n\n            <div className=\"menu-item\">\n              <p>Hide Accidentals</p>\n              <div className=\"radio-button\">\n                <input\n                  type=\"radio\"\n                  name=\"hide-accidental\"\n                  id=\"hide-acc\"\n                  defaultChecked\n                  onChange={() =>\n                    setMenuSettings({ ...menuSettings, hideAccidentals: true })\n                  }\n                />\n                <label htmlFor=\"hide-acc\">Yes</label>\n\n                <input\n                  type=\"radio\"\n                  name=\"hide-accidental\"\n                  id=\"show-acc\"\n                  onChange={() =>\n                    setMenuSettings({ ...menuSettings, hideAccidentals: false })\n                  }\n                />\n                <label htmlFor=\"show-acc\">No</label>\n              </div>\n            </div>\n\n            <div className=\"menu-item\">\n              <p>Hand</p>\n\n              <div className=\"radio-button\">\n                <input\n                  type=\"radio\"\n                  name=\"hand\"\n                  id=\"left\"\n                  onChange={() =>\n                    setMenuSettings({ ...menuSettings, rightHanded: false })\n                  }\n                />\n                <label htmlFor=\"left\">Left</label>\n\n                <input\n                  type=\"radio\"\n                  name=\"hand\"\n                  id=\"right\"\n                  defaultChecked\n                  onChange={() =>\n                    setMenuSettings({ ...menuSettings, rightHanded: true })\n                  }\n                />\n                <label htmlFor=\"right\">Right</label>\n              </div>\n            </div>\n\n            <div className=\"menu-item\">\n              <p>Fret Numbers</p>\n\n              <div className=\"radio-button\">\n                <input\n                  type=\"radio\"\n                  name=\"fret-nums\"\n                  id=\"fret-nums-all\"\n                  onChange={() =>\n                    setMenuSettings({ ...menuSettings, fretNums: 'all' })\n                  }\n                />\n                <label htmlFor=\"fret-nums-all\">All</label>\n\n                <input\n                  type=\"radio\"\n                  name=\"fret-nums\"\n                  id=\"fret-nums-inlays\"\n                  defaultChecked\n                  onChange={() =>\n                    setMenuSettings({ ...menuSettings, fretNums: 'inlays' })\n                  }\n                />\n                <label htmlFor=\"fret-nums-inlays\">Inlays</label>\n\n                <input\n                  type=\"radio\"\n                  name=\"fret-nums\"\n                  id=\"fret-nums-off\"\n                  onChange={() =>\n                    setMenuSettings({ ...menuSettings, fretNums: 'off' })\n                  }\n                />\n                <label htmlFor=\"fret-nums-off\">Off</label>\n              </div>\n            </div>\n\n            <div className=\"menu-item instrument\">\n              <h3>Instrument</h3>\n\n              <div className=\"radio-button radio-button-instrument\">\n                <input\n                  type=\"radio\"\n                  name=\"instrument\"\n                  id=\"guitar\"\n                  defaultChecked\n                  onClick={() =>\n                    instrumentPreset(['E', 'A', 'D', 'G', 'B', 'E'], 'guitar')\n                  }\n                />\n\n                <label htmlFor=\"guitar\">Guitar</label>\n\n                <input\n                  type=\"radio\"\n                  name=\"instrument\"\n                  id=\"bass\"\n                  onClick={() => instrumentPreset(['E', 'A', 'D', 'G'], 'bass')}\n                />\n\n                <label htmlFor=\"bass\">Bass</label>\n\n                <input\n                  type=\"radio\"\n                  name=\"instrument\"\n                  id=\"ukulele\"\n                  onClick={() =>\n                    instrumentPreset(['G', 'C', 'E', 'A'], 'ukulele')\n                  }\n                />\n\n                <label htmlFor=\"ukulele\">Ukulele</label>\n\n                <input\n                  type=\"radio\"\n                  name=\"instrument\"\n                  id=\"mandolin\"\n                  onClick={() =>\n                    instrumentPreset(['G', 'D', 'A', 'E'], 'mandolin')\n                  }\n                />\n\n                <label htmlFor=\"mandolin\">Mandolin</label>\n              </div>\n            </div>\n\n            <div className=\"menu-item tunings\">\n              <h3>Tuning Presets</h3>\n\n              <div className=\"tuning-presets\">\n                {data[instrument].map(preset => {\n                  const presetName = preset[0];\n                  const presetTuning = preset[1];\n\n                  return (\n                    <button type=\"button\" onClick={() => test(presetTuning)}>\n                      {presetName}\n                    </button>\n                  );\n                })}\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </header>\n  );\n}\n\nexport default Header;\n","import React from 'react';\nimport './Fret.css';\n\nconst Fret = ({\n  note,\n  index,\n  updateTuning,\n  notesArray,\n  string,\n  focusedNote,\n  highlightNotes,\n  menuSettings,\n}) => {\n  const noteIndex = notesArray.indexOf(note);\n\n  const flattenNote = () => {\n    noteIndex === 0\n      ? updateTuning(string, notesArray[notesArray.length - 1])\n      : updateTuning(string, notesArray[noteIndex - 1]);\n  };\n\n  const sharpenNote = () => {\n    updateTuning(string, notesArray[(noteIndex + 1) % notesArray.length]);\n  };\n\n  const clickNote = () => {\n    if (index === 0) {\n      menuSettings.flattenPitch ? flattenNote() : sharpenNote();\n    } else {\n      highlightNotes(noteIndex);\n    }\n  };\n\n  const noteColor = () => {\n    switch (note) {\n      case 'C': {\n        return '#fd2424';\n      }\n      case 'D': {\n        return '#24fd48';\n      }\n      case 'E': {\n        return '#fd3fd4';\n      }\n      case 'F': {\n        return '#fde03f';\n      }\n      case 'G': {\n        return '#174fe9';\n      }\n      case 'A': {\n        return '#f58849';\n      }\n      case 'B': {\n        return '#09cbe0';\n      }\n      default: {\n        return 'white';\n      }\n    }\n  };\n\n  const noteDisplay = () => {\n    // Always display open notes\n    if (index === 0) {\n      return 'flex';\n    }\n\n    if (menuSettings.hideAccidentals && note.length >= 2) {\n      // Don't hide focused accidental after changing settings\n      if (focusedNote === noteIndex) {\n        return 'flex';\n      } else {\n        return 'none';\n      }\n    }\n\n    if (focusedNote === noteIndex || focusedNote === -1) {\n      return 'flex';\n    } else {\n      return 'none';\n    }\n  };\n\n  const displayFretNum = () => {\n    if (string !== 0 || index === 0) {\n      return;\n    } else if (\n      menuSettings.fretNums === 'off' ||\n      (menuSettings.fretNums === 'inlays' &&\n        !Array.from([3, 5, 7, 9, 12]).includes(index))\n    ) {\n      return;\n    }\n    return <div className=\"fret-num\">{index}</div>;\n  };\n\n  return (\n    <div\n      className={menuSettings.rightHanded ? 'fret' : 'fret fret-left-handed'}\n    >\n      {displayFretNum()}\n      <div\n        className=\"note\"\n        style={{\n          backgroundColor: noteColor(),\n          display: noteDisplay(),\n        }}\n        onClick={() => clickNote()}\n      >\n        {note}\n      </div>\n    </div>\n  );\n};\n\nexport default Fret;\n","import React from 'react';\nimport Fret from './Fret';\nimport './String.css';\n\nconst String = ({\n  openNote,\n  updateTuning,\n  string,\n  focusedNote,\n  highlightNotes,\n  menuSettings,\n}) => {\n  const fretNums = 12;\n  const notesArrayFlat = [\n    'C',\n    'Db',\n    'D',\n    'Eb',\n    'E',\n    'F',\n    'Gb',\n    'G',\n    'Ab',\n    'A',\n    'Bb',\n    'B',\n  ];\n  const notesArraySharp = [\n    'C',\n    'C#',\n    'D',\n    'D#',\n    'E',\n    'F',\n    'F#',\n    'G',\n    'G#',\n    'A',\n    'A#',\n    'B',\n  ];\n  const notesArray = menuSettings.useFlats ? notesArrayFlat : notesArraySharp;\n  let note = openNote;\n  let openNoteIndex;\n\n  return (\n    <div\n      className={\n        menuSettings.rightHanded ? 'string' : 'string string-left-handed'\n      }\n    >\n      {[...Array(fretNums + 1)].map((val, index) => {\n        // Open Note\n        if (index === 0) {\n          // Find position of note when switching between accidental types\n          note.includes('#')\n            ? (openNoteIndex = notesArraySharp.indexOf(note))\n            : (openNoteIndex = notesArrayFlat.indexOf(note));\n\n          note = notesArray[openNoteIndex];\n        } else {\n          const noteIndex = notesArray.indexOf(note);\n          note = notesArray[(noteIndex + 1) % notesArray.length];\n        }\n\n        return (\n          <Fret\n            note={note}\n            index={index}\n            key={index}\n            string={string}\n            updateTuning={updateTuning}\n            notesArray={notesArray}\n            focusedNote={focusedNote}\n            highlightNotes={highlightNotes}\n            menuSettings={menuSettings}\n          />\n        );\n      })}\n    </div>\n  );\n};\n\nexport default String;\n","import React, { useState } from 'react';\nimport String from './String';\nimport './Fretboard.css';\n\nconst Fretboard = ({ tuning, setTuning, menuSettings }) => {\n  const [focusedNote, setFocusedNote] = useState(-1);\n\n  const updateTuning = (string, newNote) => {\n    const newTuning = [...tuning];\n    newTuning[string] = newNote;\n    setTuning(newTuning);\n  };\n\n  const highlightNotes = note => {\n    setFocusedNote(note);\n\n    // Reset highlight after clicking twice\n    if (note === focusedNote) {\n      setFocusedNote(-1);\n    }\n  };\n  return (\n    <section\n      className={\n        menuSettings.rightHanded ? 'fretboard' : 'fretboard left-handed'\n      }\n    >\n      {tuning.map((val, index) => (\n        <String\n          openNote={val}\n          key={index}\n          string={index}\n          updateTuning={updateTuning}\n          focusedNote={focusedNote}\n          highlightNotes={highlightNotes}\n          menuSettings={menuSettings}\n        />\n      ))}\n    </section>\n  );\n};\n\nexport default Fretboard;\n","import React, { useState } from 'react';\nimport Header from './components/Header';\nimport Fretboard from './components/Fretboard';\nimport 'font-awesome/css/font-awesome.min.css';\nimport './App.css';\n\nconst App = () => {\n  const initialTuning = ['E', 'A', 'D', 'G', 'B', 'E'];\n  const [openMenu, setOpenMenu] = useState(false);\n  const [tuning, setTuning] = useState(initialTuning);\n\n  const [menuSettings, setMenuSettings] = useState({\n    useFlats: true,\n    rightHanded: true,\n    hideAccidentals: true,\n    flattenPitch: true,\n    fretNums: 'inlays',\n  });\n\n  const changeTuningFromPreset = preset => {\n    setTuning(preset);\n  };\n\n  return (\n    <div className=\"App\">\n      <Header\n        openMenu={openMenu}\n        setOpenMenu={setOpenMenu}\n        changeTuningFromPreset={changeTuningFromPreset}\n        setMenuSettings={setMenuSettings}\n        menuSettings={menuSettings}\n      />\n      <main>\n        <Fretboard\n          tuning={tuning}\n          setTuning={setTuning}\n          menuSettings={menuSettings}\n        />\n      </main>\n    </div>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}